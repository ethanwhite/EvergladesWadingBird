#!wing
#!version=7.0
##################################################################
# Wing project file : User-specific branch                       #
##################################################################
[user attributes]
debug.exceptions-ignored = {loc('../../../opt/miniconda3/envs/Zooniverse_pytorch/lib/python3.7/site-packages/_pytest/config/__init__.py'): {1514: True}}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'mYTKoK1rXWQqIhqa5HF7n2gY2A'\
        'ez8fCg',
        'size-state': '',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0,
                                   0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.25,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [(3,)],
                                 'selected-nodes': [(7,)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('browser',
                               'tall',
                               0,
                               {}),
                              ('snippets',
                               'tall',
                               0,
                               {}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [1,
                          0],
        'notebook_display': 'normal',
        'notebook_percent': 0.577079107505071,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': u'iou_threshold',
                                       'fReverse': False,
                                       'fSearchText': u'patch_size=patch_size',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': u'pfeifer',
                                       'fReverse': False,
                                       'fSearchText': u'plugin',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {'tree-state': []}),
                     ('testing',
                      'wide',
                      0,
                      {'added-files': [],
                       'filter': u'',
                       'recent-filters': None,
                       'sort-order': 'source-lineno',
                       'tree-state': {'expanded-nodes': [(11,),
        (11,
         0)],
                                      'selected-nodes': [(11,)],
                                      'top-node': (0,)}}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      1,
                      {}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': 'boxes = np.array(augmented["bboxes"])\n',
                       'first-line': 686L,
                       'folded-linenos': [],
                       'history': {u'file:/Applications/WingPro.app/Contents/Resources/src/testing/runners/run_pytest_xml.py': ['a'\
        'ugmented\n',
        'augmented.keys()\n',
        'targets = {"boxes":augmented["bboxes"],"labels":augmented["category'\
        '_ids"]]}\n',
        'targets = {"boxes":augmented["bboxes"],"labels":augmented["category'\
        '_ids"]}\n',
        'targets.keys()\n',
        'targets["boxes"]\n',
        'type(targets["boxes"])\n',
        'np.concatonate\n',
        'np.concatanat\n',
        'import numpy as npo\n',
        'np.concatanate\n',
        'np.concatanate()\n',
        'np.concatanate(augmented["bboxes"])\n',
        'np.concatanate(augmented["bboxes"],1)\n',
        'np.concatenate(augmented["bboxes"],1)\n',
        'np.concatenate(augmented["bboxes"],0)\n',
        'np.concatenate(augmented["bboxes"])\n',
        'augmented["bboxes"]\n',
        'np.array(augmented["bboxes"])\n',
        'image = Image(path)\n',
        'Image\n',
        'image = Image.open(path)\n',
        'import numpy as np\n',
        'image = np.array(Image.open(path))\n',
        'from skimage import io\n',
        'io.imread(image)\n',
        'io.imread(path).shape\n',
        'a = io.imread(path)\n',
        'b = io.imread(path)\n',
        'path\n',
        'a\n',
        'b\n',
        'np.testing\n',
        'np.testing.array_equal(a,b)\n',
        'np.array_equal(a,b)\n',
        'input\n',
        'input.dtype\n',
        'weight.dtype\n',
        'data.keys()\n',
        '"category_ids" in category_ids\n',
        '"category_ids" in data.keys()\n',
        'self.params.label_fields\n',
        'self.params.label_fields in data.keys()\n',
        'all(i in data.keys() for i in self.params.label_fields)\n',
        'i in self.params.label_fields\n',
        'i for i in self.params.label_fields\n',
        '[i for i in self.params.label_fields]\n',
        'image\n',
        'image.shape\n',
        'image.dtype\n',
        'type(image)\n',
        'type(images)\n',
        'type(images[0])\n',
        'type(images[2])\n',
        'type(images[1])\n',
        'type(tarets[1])\n',
        'type(tarfets[1])\n',
        'type(targets[1])\n',
        'type(targets[0])\n',
        'type(targets[0]["boxes"])\n',
        '[len(x) == 0 for x in boxes]\n',
        'boxes = torch.Tensor()\n',
        'boxes = [torch.Tensor()]\n',
        'all([len(x) == 0 for x in boxes])\n',
        'len(collated_batch[1][1])\n',
        'len(collated_batch[0)\n',
        'len(collated_batch[2])\n',
        'len(collated_batch[0])\n',
        'len(collated_batch[1])\n',
        'collated_batch[1]\n',
        'collated_batch = utilities.collate_fn([None, batch])\n',
        'len(collated_batch)\n',
        'collated_batch = utilities.collate_fn(None)\n',
        'collated_batch = utilities.collate_fn([None])\n',
        'collated_batch = utilities.collate_fn([None, batch, batch])\n',
        'collated_batch\n',
        'collated_batch[0]\n']},
                       'launch-id': None,
                       'sel-line': 710L,
                       'sel-line-start': 53353L,
                       'selection_end': 53353L,
                       'selection_start': 53353L,
                       'zoom': 0L}),
                     ('debug-watch',
                      'wide',
                      1,
                      {'node-states': [],
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (0,)}}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0L,
                       'folded-linenos': [],
                       'history': {},
                       'launch-id': None,
                       'sel-line': 3L,
                       'sel-line-start': 157L,
                       'selection_end': 157L,
                       'selection_start': 157L,
                       'zoom': 0L}),
                     ('bookmarks',
                      'wide',
                      1,
                      {}),
                     ('messages',
                      'wide',
                      2,
                      {}),
                     ('os-command',
                      'wide',
                      1,
                      {})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('augmentation.py'),
        {'attrib-starts': [('get_transform|0|',
                            19)],
         'code-line': '            A.LongestMaxSize(1000),\n',
         'first-line': 19L,
         'folded-linenos': [],
         'sel-line': 23L,
         'sel-line-start': 634L,
         'selection_end': 669L,
         'selection_start': 669L,
         'zoom': 0L},
        1621110570.332581],
        [loc('generalization.py'),
         {'attrib-starts': [('view_training|0|',
                             412)],
          'code-line': 'def view_training(paths,comet_logger):\n',
          'first-line': 407L,
          'folded-linenos': [],
          'sel-line': 412L,
          'sel-line-start': 19123L,
          'selection_end': 19134L,
          'selection_start': 19127L,
          'zoom': 0L},
         1621110594.199334],
        [loc('generalization.py'),
         {'attrib-starts': [('view_training|0|',
                             412)],
          'code-line': '                            comet_logger.experiment.'\
                       'log_image("{}/{}".format(tmpdirname, image_path[0]))'\
                       '                \n',
          'first-line': 415L,
          'folded-linenos': [],
          'sel-line': 434L,
          'sel-line-start': 20282L,
          'selection_end': 20354L,
          'selection_start': 20354L,
          'zoom': 0L},
         1621111012.349292],
        [loc('augmentation.py'),
         {'attrib-starts': [('get_transform|0|',
                             19)],
          'code-line': '            A.RandomCrop(width=200, height=200, p=0.'\
                       '2),\n',
          'first-line': 19L,
          'folded-linenos': [],
          'sel-line': 25L,
          'sel-line-start': 692L,
          'selection_end': 738L,
          'selection_start': 738L,
          'zoom': 0L},
         1621111029.621085],
        [loc('generalization.py'),
         {'attrib-starts': [],
          'code-line': '    for x in train_list:\n',
          'first-line': 550L,
          'folded-linenos': [],
          'sel-line': 566L,
          'sel-line-start': 26329L,
          'selection_end': 26353L,
          'selection_start': 26353L,
          'zoom': 0L},
         1621111815.805649],
        [loc('augmentation.py'),
         {'attrib-starts': [('get_transform|0|',
                             19)],
          'code-line': '            A.RandomCrop(width=500, height=500, p=0.'\
                       '2),\n',
          'first-line': 19L,
          'folded-linenos': [],
          'sel-line': 26L,
          'sel-line-start': 748L,
          'selection_end': 801L,
          'selection_start': 801L,
          'zoom': 0L},
         1621115972.122485],
        [loc('generalization.py'),
         {'attrib-starts': [('prepare_palmyra|0|',
                             111)],
          'code-line': '            patch_size=1000,\n',
          'first-line': 157L,
          'folded-linenos': [],
          'sel-line': 166L,
          'sel-line-start': 6938L,
          'selection_end': 6965L,
          'selection_start': 6961L,
          'zoom': 0L},
         1621116611.97519],
        [loc('augmentation.py'),
         {'attrib-starts': [('get_transform|0|',
                             19)],
          'code-line': '            A.OneOf([\n',
          'first-line': 19L,
          'folded-linenos': [],
          'sel-line': 24L,
          'sel-line-start': 669L,
          'selection_end': 690L,
          'selection_start': 690L,
          'zoom': 0L},
         1621122166.053828],
        [loc('generalization.py'),
         {'attrib-starts': [('prepare_palmyra|0|',
                             111)],
          'code-line': '            numpy_image=training_image,\n',
          'first-line': 134L,
          'folded-linenos': [],
          'sel-line': 145L,
          'sel-line-start': 5870L,
          'selection_end': 5898L,
          'selection_start': 5898L,
          'zoom': 0L},
         1621124766.803973],
        [loc('augmentation.py'),
         {'attrib-starts': [('get_transform|0|',
                             19)],
          'code-line': '            A.RandomCrop(width=500, height=500, p=0.'\
                       '2),\n',
          'first-line': 19L,
          'folded-linenos': [],
          'sel-line': 26L,
          'sel-line-start': 747L,
          'selection_end': 781L,
          'selection_start': 778L,
          'zoom': 0L},
         1621125086.121383],
        [loc('generalization.py'),
         {'attrib-starts': [('prepare|0|',
                             438)],
          'code-line': '    paths["schedl"] = prepare_schedl(generate=True)'\
                       '\n',
          'first-line': 438L,
          'folded-linenos': [],
          'sel-line': 446L,
          'sel-line-start': 20842L,
          'selection_end': 20893L,
          'selection_start': 20893L,
          'zoom': 0L},
         1621125252.56535],
        [loc('augmentation.py'),
         {'attrib-starts': [('get_transform|0|',
                             19)],
          'code-line': '            #A.HorizontalFlip(p=0.5),\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 28L,
          'sel-line-start': 844L,
          'selection_end': 877L,
          'selection_start': 877L,
          'zoom': 0L},
         1621130822.738143],
        [loc('generalization.py'),
         {'attrib-starts': [],
          'code-line': '        train_sets.append("everglades")\n',
          'first-line': 560L,
          'folded-linenos': [],
          'sel-line': 568L,
          'sel-line-start': 26402L,
          'selection_end': 26441L,
          'selection_start': 26441L,
          'zoom': 0L},
         1621172733.212195],
        [loc('augmentation.py'),
         {'attrib-starts': [('get_transform|0|',
                             19)],
          'code-line': '    else:\n',
          'first-line': 18L,
          'folded-linenos': [],
          'sel-line': 32L,
          'sel-line-start': 995L,
          'selection_end': 1004L,
          'selection_start': 1004L,
          'zoom': 0L},
         1621201891.722238],
        [loc('generalization.py'),
         {'attrib-starts': [('train|0|',
                             452)],
          'code-line': '    test_results = model.evaluate(csv_file="/orange/'\
                       'ewhite/b.weinstein/generalization/crops/test_annotat'\
                       'ions.csv", root_dir="/orange/ewhite/b.weinstein/gene'\
                       'ralization/crops/", iou_threshold=0.25)\n',
          'first-line': 494L,
          'folded-linenos': [],
          'sel-line': 510L,
          'sel-line-start': 23359L,
          'selection_end': 23555L,
          'selection_start': 23359L,
          'zoom': 0L},
         1621201961.409357],
        [loc('../../DeepForest-pytorch/deepforest/evaluate.py'),
         {'attrib-starts': [],
          'code-line': '"""\n',
          'first-line': 15L,
          'folded-linenos': [],
          'sel-line': 0L,
          'sel-line-start': 0L,
          'selection_end': 0L,
          'selection_start': 0L,
          'zoom': 0L},
         1621201977.151312],
        [loc('../../DeepForest-pytorch/deepforest/IoU.py'),
         {'attrib-starts': [],
          'code-line': '"""\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 0L,
          'sel-line-start': 0L,
          'selection_end': 0L,
          'selection_start': 0L,
          'zoom': 0L},
         1621217954.453659],
        [loc('generalization.py'),
         {'attrib-starts': [('train|0|',
                             453)],
          'code-line': '    model.create_trainer(logger=comet_logger, DDPPlu'\
                       'gin(find_unused_parameters=False))\n',
          'first-line': 498L,
          'folded-linenos': [],
          'sel-line': 507L,
          'sel-line-start': 23270L,
          'selection_end': 23325L,
          'selection_start': 23319L,
          'zoom': 0L},
         1621218363.987052],
        [loc('generalization.py'),
         {'attrib-starts': [],
          'code-line': 'from pytorch_lightning.plugins import DDPPlugin\n',
          'first-line': 16L,
          'folded-linenos': [],
          'sel-line': 21L,
          'sel-line-start': 506L,
          'selection_end': 535L,
          'selection_start': 529L,
          'zoom': 0L},
         1621218364.722289],
        [loc('generalization.py'),
         {'attrib-starts': [],
          'code-line': 'from pytorch_lightning.plugins import DDPPlugin\n',
          'first-line': 16L,
          'folded-linenos': [],
          'sel-line': 21L,
          'sel-line-start': 506L,
          'selection_end': 553L,
          'selection_start': 547L,
          'zoom': 0L},
         1621218365.093385]],
        20),
        'current-loc': loc('generalization.py'),
        'editor-state-list': [(loc('augmentation.py'),
                               {'attrib-starts': [('get_transform|0|',
        19)],
                                'code-line': '    else:\n',
                                'first-line': 18L,
                                'folded-linenos': [],
                                'sel-line': 32L,
                                'sel-line-start': 995L,
                                'selection_end': 1004L,
                                'selection_start': 1004L,
                                'zoom': 0L}),
                              (loc('../../../opt/miniconda3/envs/Zooniverse_pytorch/lib/python3.7/site-packages/albumentations/augmentations/bbox_utils.py'),
                               {'attrib-starts': [('BboxProcessor|0|',
        20),
        ('BboxProcessor|0|.ensure_data_valid|0|',
         25)],
                                'code-line': "                raise ValueErr"\
        "or(\"Your 'label_fields' are not valid - them must have same names "\
        "as params in dict\")\n",
                                'first-line': 23L,
                                'folded-linenos': [],
                                'sel-line': 36L,
                                'sel-line-start': 1170L,
                                'selection_end': 1285L,
                                'selection_start': 1285L,
                                'zoom': 0L}),
                              (loc('../../DeepForest-pytorch/deepforest/evaluate.py'),
                               {'attrib-starts': [],
                                'code-line': '"""\n',
                                'first-line': 15L,
                                'folded-linenos': [],
                                'sel-line': 0L,
                                'sel-line-start': 0L,
                                'selection_end': 0L,
                                'selection_start': 0L,
                                'zoom': 0L}),
                              (loc('../../../opt/miniconda3/envs/Zooniverse_pytorch/lib/python3.7/site-packages/albumentations/augmentations/functional.py'),
                               {'attrib-starts': [('random_crop|0|',
        327)],
                                'code-line': '                crop_height=cr'\
        'op_height, crop_width=crop_width, height=height, width=width\n',
                                'first-line': 318L,
                                'folded-linenos': [],
                                'sel-line': 333L,
                                'sel-line-start': 10158L,
                                'selection_end': 10158L,
                                'selection_start': 10158L,
                                'zoom': 0L}),
                              (loc('generalization.py'),
                               {'attrib-starts': [('train|0|',
        453)],
                                'code-line': '    except:\n',
                                'first-line': 494L,
                                'folded-linenos': [],
                                'sel-line': 499L,
                                'sel-line-start': 22811L,
                                'selection_end': 22822L,
                                'selection_start': 22822L,
                                'zoom': 0L}),
                              (loc('../../DeepForest-pytorch/deepforest/IoU.py'),
                               {'attrib-starts': [],
                                'code-line': '"""\n',
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 0L,
                                'sel-line-start': 0L,
                                'selection_end': 0L,
                                'selection_start': 0L,
                                'zoom': 0L}),
                              (loc('../../DeepForest-pytorch/deepforest/main.py'),
                               {'attrib-starts': [('deepforest|0|',
        20),
        ('deepforest|0|.val_dataloader|0|',
         172)],
                                'code-line': '        Returns: loader or Non'\
        'e\n',
                                'first-line': 168L,
                                'folded-linenos': [],
                                'sel-line': 175L,
                                'sel-line-start': 6740L,
                                'selection_end': 6771L,
                                'selection_start': 6771L,
                                'zoom': 0L}),
                              (loc('../../../opt/miniconda3/envs/Zooniverse_pytorch/lib/python3.7/site-packages/_pytest/python.py'),
                               {'attrib-starts': [('Module|0|',
        495),
        ('Module|0|._importtestmodule|0|',
         573)],
                                'code-line': '            ) from e\n',
                                'first-line': 598L,
                                'folded-linenos': [],
                                'sel-line': 607L,
                                'sel-line-start': 23072L,
                                'selection_end': 23072L,
                                'selection_start': 23072L,
                                'zoom': 0L}),
                              (loc('../../../opt/miniconda3/envs/Zooniverse_pytorch/lib/python3.7/site-packages/torchvision/models/detection/retinanet.py'),
                               {'attrib-starts': [('RetinaNet|0|',
        227),
        ('RetinaNet|0|.forward|0|',
         456)],
                                'code-line': '                boxes = target'\
        '["boxes"]\n',
                                'first-line': 484L,
                                'folded-linenos': [],
                                'sel-line': 500L,
                                'sel-line-start': 21386L,
                                'selection_end': 21425L,
                                'selection_start': 21425L,
                                'zoom': 0L}),
                              (loc('submit_generalization.sbatch'),
                               {'attrib-starts': [],
                                'code-line': '#!/bin/bash\n',
                                'first-line': 6L,
                                'folded-linenos': [],
                                'sel-line': 0L,
                                'sel-line-start': 0L,
                                'selection_end': 0L,
                                'selection_start': 0L,
                                'zoom': 0L}),
                              (loc('submit_training.sbatch'),
                               {'attrib-starts': [],
                                'code-line': '#!/bin/bash\n',
                                'first-line': 4L,
                                'folded-linenos': [],
                                'sel-line': 0L,
                                'sel-line-start': 0L,
                                'selection_end': 0L,
                                'selection_start': 0L,
                                'zoom': 0L}),
                              (loc('tests/test_augmentations.py'),
                               {'attrib-starts': [('test_get_transform|0|',
        6)],
                                'code-line': '    m.config["workers"] = 0\n',
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 9L,
                                'sel-line-start': 281L,
                                'selection_end': 308L,
                                'selection_start': 308L,
                                'zoom': 0L}),
                              (loc('../../../opt/miniconda3/envs/Zooniverse_pytorch/lib/python3.7/site-packages/torchvision/models/detection/transform.py'),
                               {'attrib-starts': [('GeneralizedRCNNTransform'\
        '|0|',
        56),
        ('GeneralizedRCNNTransform|0|.forward|0|',
         77)],
                                'code-line': '            if image.dim() != '\
        '3:\n',
                                'first-line': 90L,
                                'folded-linenos': [],
                                'sel-line': 99L,
                                'sel-line-start': 3855L,
                                'selection_end': 3855L,
                                'selection_start': 3855L,
                                'zoom': 0L}),
                              (loc('view_hayes.py'),
                               {'attrib-starts': [('view_training|0|',
        7)],
                                'code-line': '    comet_logger = CometLogger'\
        '(api_key="ypQZhYfs3nSyKzOfz13iuJpj2",\n',
                                'first-line': 1L,
                                'folded-linenos': [],
                                'sel-line': 8L,
                                'sel-line-start': 203L,
                                'selection_end': 203L,
                                'selection_start': 203L,
                                'zoom': 0L})],
        'has-focus': True,
        'locked': False},
        [loc('augmentation.py'),
         loc('../../../opt/miniconda3/envs/Zooniverse_pytorch/lib/python3.7/site-packages/albumentations/augmentations/bbox_utils.py'),
         loc('../../DeepForest-pytorch/deepforest/evaluate.py'),
         loc('../../../opt/miniconda3/envs/Zooniverse_pytorch/lib/python3.7/site-packages/albumentations/augmentations/functional.py'),
         loc('generalization.py'),
         loc('../../DeepForest-pytorch/deepforest/IoU.py'),
         loc('../../DeepForest-pytorch/deepforest/main.py'),
         loc('../../../opt/miniconda3/envs/Zooniverse_pytorch/lib/python3.7/site-packages/_pytest/python.py'),
         loc('../../../opt/miniconda3/envs/Zooniverse_pytorch/lib/python3.7/site-packages/torchvision/models/detection/retinanet.py'),
         loc('submit_generalization.sbatch'),
         loc('submit_training.sbatch'),
         loc('tests/test_augmentations.py'),
         loc('../../../opt/miniconda3/envs/Zooniverse_pytorch/lib/python3.7/site-packages/torchvision/models/detection/transform.py'),
         loc('view_hayes.py')]),
                               'open_files': [u'../../DeepForest-pytorch/deepforest/main.py',
        u'submit_generalization.sbatch',
        u'submit_training.sbatch',
        u'tests/test_augmentations.py',
        u'view_hayes.py',
        u'../../../opt/miniconda3/envs/Zooniverse_pytorch/lib/python3.7/site-packages/_pytest/python.py',
        u'../../../opt/miniconda3/envs/Zooniverse_pytorch/lib/python3.7/site-packages/albumentations/augmentations/bbox_utils.py',
        u'../../../opt/miniconda3/envs/Zooniverse_pytorch/lib/python3.7/site-packages/albumentations/augmentations/functional.py',
        u'../../../opt/miniconda3/envs/Zooniverse_pytorch/lib/python3.7/site-packages/torchvision/models/detection/retinanet.py',
        u'../../../opt/miniconda3/envs/Zooniverse_pytorch/lib/python3.7/site-packages/torchvision/models/detection/transform.py',
        u'augmentation.py',
        u'../../DeepForest-pytorch/deepforest/evaluate.py',
        u'../../DeepForest-pytorch/deepforest/IoU.py',
        u'generalization.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.561078348778433},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((0,
                           1),
                          1621218362.44151),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.5},
                 'splits': 2,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    0),
                                   1620841259.525767),
                 'user_data': {}},
        'window-alloc': (0,
                         23,
                         1738,
                         1097)}]}
guimgr.recent-documents = [loc('generalization.py'),
                           loc('../../DeepForest-pytorch/deepforest/IoU.py'),
                           loc('../../DeepForest-pytorch/deepforest/evaluate.py'),
                           loc('augmentation.py'),
                           loc('../../../opt/miniconda3/envs/Zooniverse_pytorch/lib/python3.7/site-packages/torchvision/models/detection/transform.py'),
                           loc('../../DeepForest-pytorch/deepforest/main.py'),
                           loc('view_hayes.py'),
                           loc('submit_generalization.sbatch'),
                           loc('submit_training.sbatch')]
guimgr.visual-state = {loc('../../DeepForest-pytorch/deepforest/dataset.py'): {'a'\
        'ttrib-starts': [('get_transform|0|',
                          24)],
        'code-line': '            ToTensorV2()\n',
        'first-line': 20L,
        'folded-linenos': [],
        'sel-line': 29L,
        'sel-line-start': 977L,
        'selection_end': 1001L,
        'selection_start': 1001L,
        'zoom': 0L},
                       loc('../../DeepForest-pytorch/deepforest/main.py'): {'a'\
        'ttrib-starts': [('deepforest|0|',
                          19),
                         ('deepforest|0|.__init__|0|',
                          23)],
        'code-line': '            raise ValueError(\n',
        'first-line': 58L,
        'folded-linenos': [],
        'sel-line': 61L,
        'sel-line-start': 2056L,
        'selection_end': 2085L,
        'selection_start': 2085L,
        'zoom': 0L},
                       loc('augmentation.py'): {'attrib-starts': [('get_tran'\
        'sform|0|',
        14)],
        'code-line': '    if augment:\n',
        'first-line': 10L,
        'folded-linenos': [],
        'sel-line': 16L,
        'sel-line-start': 431L,
        'selection_end': 446L,
        'selection_start': 446L,
        'zoom': 0L},
                       loc('generalization.py'): {'attrib-starts': [],
        'code-line': '    results = []\n',
        'first-line': 573L,
        'folded-linenos': [],
        'sel-line': 578L,
        'sel-line-start': 26800L,
        'selection_end': 26816L,
        'selection_start': 26816L,
        'zoom': 0L},
                       loc('tests/test_augmentations.py'): {'attrib-starts': [('t'\
        'est_get_transform|0|',
        6)],
        'code-line': '    m = main.deepforest(num_classes=1, label_dict={"Tr'\
                     'ee":0},transforms=augmentation.get_transform)\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 8L,
        'sel-line-start': 181L,
        'selection_end': 279L,
        'selection_start': 279L,
        'zoom': 0L},
                       loc('../../../opt/miniconda3/envs/Zooniverse_pytorch/lib/python3.7/site-packages/_pytest/python.py'): {'a'\
        'ttrib-starts': [('Module|0|',
                          495),
                         ('Module|0|._importtestmodule|0|',
                          573)],
        'code-line': '            ) from e\n',
        'first-line': 598L,
        'folded-linenos': [],
        'sel-line': 607L,
        'sel-line-start': 23072L,
        'selection_end': 23072L,
        'selection_start': 23072L,
        'zoom': 0L},
                       loc('../../../opt/miniconda3/envs/Zooniverse_pytorch/lib/python3.7/site-packages/deepforest/dataset.py'): {'a'\
        'ttrib-starts': [('TreeDataset|0|',
                          37),
                         ('TreeDataset|0|.__getitem__|0|',
                          57)],
        'code-line': '\n',
        'first-line': 64L,
        'folded-linenos': [],
        'sel-line': 73L,
        'sel-line-start': 2684L,
        'selection_end': 2684L,
        'selection_start': 2684L,
        'zoom': 0L},
                       loc('../../../opt/miniconda3/envs/Zooniverse_pytorch/lib/python3.7/site-packages/torch/utils/data/_utils/fetch.py'): {'a'\
        'ttrib-starts': [('_MapDatasetFetcher|0|',
                          37),
                         ('_MapDatasetFetcher|0|.fetch|0|',
                          41)],
        'code-line': '        else:\n',
        'first-line': 26L,
        'folded-linenos': [],
        'sel-line': 44L,
        'sel-line-start': 1698L,
        'selection_end': 1698L,
        'selection_start': 1698L,
        'zoom': 0L}}
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('custom',
                        [u'KMP_DUPLICATE_LIB_OK = TRUE'])}
proj.pyexec = {None: ('custom',
                      u'/Users/benweinstein/opt/miniconda3/envs/Zooniverse_pytorch/bin/python')}
proj.pypath = {None: ('custom',
                      [u'/Users/benweinstein/Documents/EvergladesWadingBird/bird_detector_paper'])}
proj.vcs-system-config = ('prefs',
                          {'bzr': {'versioncontrol.bzr.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.bzr.executable': u'bzr'},
                           'cvs': {'versioncontrol.cvs.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.cvs.executable': u'cvs',
                                   'versioncontrol.cvs.extra-global-args': '-'\
        'z3'},
                           'git': {'versioncontrol.git.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.git.executable': u'git',
                                   'versioncontrol.git.use-porcelain': True},
                           'hg': {'versioncontrol.hg.active': 'active-if-pro'\
        'ject-dir',
                                  'versioncontrol.hg.dont-find-unregistered': True,
                                  'versioncontrol.hg.executable': u'hg',
                                  'versioncontrol.hg.extra-global-args': '--'\
        'encoding=utf8'},
                           'perforce': {'versioncontrol.perforce.active': 'n'\
        'ot-active',
        'versioncontrol.perforce.dont-find-unregistered': True,
        'versioncontrol.perforce.executable': u'p4',
        'versioncontrol.perforce.extra-global-args': ''},
                           'svn': {'versioncontrol.svn.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.svn.executable': u'svn',
                                   'versioncontrol.svn.extra-global-args': '',
                                   'versioncontrol.svn.svnadmin-executable': u'svnadmin'}})
search.search-history = [u'plugin',
                         u'view_tr',
                         u'view_training',
                         u'val_da',
                         u'val',
                         u'transform',
                         u'get_transform',
                         u'LOO',
                         u'pfeifer',
                         u'df = pd.read_csv(path_dict[x]["train"])',
                         u'df',
                         u'500',
                         u'hayes',
                         u'view_trai',
                         u'schedl',
                         u'augmentation',
                         u'resize']
testing.run-as-package-module = {None: False}
testing.stored-results = (1,
                          [(u'/Users/benweinstein/Documents/EvergladesWadingBird/bird_detector_paper/tests/test_augmentations.py',
                            [('test_get_transform',
                              0,
                              None,
                              None,
                              None,
                              1621016508,
                              6)])],
                          {})
